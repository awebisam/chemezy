"""add audit log table

Revision ID: 77725fe0ce2b
Revises: b6c551adbc2e
Create Date: 2025-07-16 00:24:00.808099

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '77725fe0ce2b'
down_revision = 'b6c551adbc2e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chemicals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('molecular_formula', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('common_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('state_of_matter', sa.Enum('SOLID', 'LIQUID', 'GAS', 'PLASMA', 'AQUEOUS', name='stateofmatter'), nullable=False),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('density', sa.Float(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chemicals_molecular_formula'), 'chemicals', ['molecular_formula'], unique=True)
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('public_profile', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('award_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('category', sa.Enum('DISCOVERY', 'DATABASE_CONTRIBUTION', 'COMMUNITY', 'SPECIAL', 'ACHIEVEMENT', name='awardcategory'), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=True),
    sa.Column('award_metadata', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_award_templates_created_by'), 'award_templates', ['created_by'], unique=False)
    op.create_index(op.f('ix_award_templates_is_active'), 'award_templates', ['is_active'], unique=False)
    op.create_index(op.f('ix_award_templates_name'), 'award_templates', ['name'], unique=True)
    op.create_table('deletionrequest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deletionrequest_user_id'), 'deletionrequest', ['user_id'], unique=False)
    op.create_table('reaction_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('reactants', sa.JSON(), nullable=True),
    sa.Column('environment', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('products', sa.JSON(), nullable=True),
    sa.Column('state_of_product', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('explanation', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reaction_cache_cache_key'), 'reaction_cache', ['cache_key'], unique=True)
    op.create_index(op.f('ix_reaction_cache_user_id'), 'reaction_cache', ['user_id'], unique=False)
    op.create_table('discovery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('effect', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('discovered_by', sa.Integer(), nullable=False),
    sa.Column('discovered_at', sa.DateTime(), nullable=False),
    sa.Column('reaction_cache_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discovered_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reaction_cache_id'], ['reaction_cache.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discovery_discovered_by'), 'discovery', ['discovered_by'], unique=False)
    op.create_index(op.f('ix_discovery_effect'), 'discovery', ['effect'], unique=True)
    op.create_table('user_awards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('progress', sa.JSON(), nullable=True),
    sa.Column('granted_at', sa.DateTime(), nullable=False),
    sa.Column('related_entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['award_templates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_awards_template_id'), 'user_awards', ['template_id'], unique=False)
    op.create_index(op.f('ix_user_awards_user_id'), 'user_awards', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_awards_user_id'), table_name='user_awards')
    op.drop_index(op.f('ix_user_awards_template_id'), table_name='user_awards')
    op.drop_table('user_awards')
    op.drop_index(op.f('ix_discovery_effect'), table_name='discovery')
    op.drop_index(op.f('ix_discovery_discovered_by'), table_name='discovery')
    op.drop_table('discovery')
    op.drop_index(op.f('ix_reaction_cache_user_id'), table_name='reaction_cache')
    op.drop_index(op.f('ix_reaction_cache_cache_key'), table_name='reaction_cache')
    op.drop_table('reaction_cache')
    op.drop_index(op.f('ix_deletionrequest_user_id'), table_name='deletionrequest')
    op.drop_table('deletionrequest')
    op.drop_index(op.f('ix_award_templates_name'), table_name='award_templates')
    op.drop_index(op.f('ix_award_templates_is_active'), table_name='award_templates')
    op.drop_index(op.f('ix_award_templates_created_by'), table_name='award_templates')
    op.drop_table('award_templates')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_chemicals_molecular_formula'), table_name='chemicals')
    op.drop_table('chemicals')
    # ### end Alembic commands ###