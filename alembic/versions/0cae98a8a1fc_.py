"""

Revision ID: 0cae98a8a1fc
Revises: 
Create Date: 2025-07-08 05:30:59.475646

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '0cae98a8a1fc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('reaction_cache',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cache_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('reactants', sa.JSON(), nullable=True),
    sa.Column('environment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('products', sa.JSON(), nullable=True),
    sa.Column('effects', sa.JSON(), nullable=True),
    sa.Column('state_change', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reaction_cache_cache_key'), 'reaction_cache', ['cache_key'], unique=True)
    op.create_index(op.f('ix_reaction_cache_user_id'), 'reaction_cache', ['user_id'], unique=False)
    op.create_table('discovery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('effect', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('discovered_by', sa.Integer(), nullable=False),
    sa.Column('discovered_at', sa.DateTime(), nullable=False),
    sa.Column('reaction_cache_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discovered_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reaction_cache_id'], ['reaction_cache.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discovery_discovered_by'), 'discovery', ['discovered_by'], unique=False)
    op.create_index(op.f('ix_discovery_effect'), 'discovery', ['effect'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_discovery_effect'), table_name='discovery')
    op.drop_index(op.f('ix_discovery_discovered_by'), table_name='discovery')
    op.drop_table('discovery')
    op.drop_index(op.f('ix_reaction_cache_user_id'), table_name='reaction_cache')
    op.drop_index(op.f('ix_reaction_cache_cache_key'), table_name='reaction_cache')
    op.drop_table('reaction_cache')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###