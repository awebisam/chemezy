name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: chemezy
          POSTGRES_USER: chemezy
          POSTGRES_DB: chemezy_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install psycopg2-binary==2.9.7  # Use older version for compatibility
        pip install -r requirements.txt
    
    - name: Set up environment variables
      run: |
        echo "SECRET_KEY=test-secret-key-for-ci-32-characters-long" >> .env
        echo "DATABASE_URL=postgresql://chemezy:chemezy@localhost/chemezy_test" >> .env
        echo "DEBUG=true" >> .env
        echo "ALLOWED_ORIGINS=[\"http://localhost:3000\"]" >> .env
    
    - name: Run database migrations
      run: |
        alembic upgrade head
    
    - name: Run linting with flake8
      run: |
        pip install flake8
        flake8 app tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run type checking with mypy
      run: |
        pip install mypy
        mypy app --ignore-missing-imports
      continue-on-error: true  # Don't fail build on type errors initially
    
    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=html --cov-fail-under=85 -v
      env:
        SECRET_KEY: test-secret-key-for-ci-32-characters-long
        DATABASE_URL: postgresql://chemezy:chemezy@localhost/chemezy_test
        DEBUG: true
        ALLOWED_ORIGINS: '["http://localhost:3000"]'
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: Security scan with bandit
      run: |
        pip install bandit
        bandit -r app/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          htmlcov/
          bandit-report.json
          coverage.xml

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: chemezy-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        docker run --rm chemezy-backend:${{ github.sha }} python -c "import app; print('Docker build successful')"